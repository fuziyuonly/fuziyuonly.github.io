<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sh4Nn0n&#39;s Blog</title>
  
  <subtitle>^.^</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-16T12:55:31.250Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Sh4Nn0n</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python-Threading模块</title>
    <link href="http://yoursite.com/2019/10/16/python-Threading%E6%A8%A1%E5%9D%97/"/>
    <id>http://yoursite.com/2019/10/16/python-Threading模块/</id>
    <published>2019-10-16T11:52:54.000Z</published>
    <updated>2019-10-16T12:55:31.250Z</updated>
    
    <summary type="html">
    
      &lt;hr&gt;&lt;h1 id=&quot;python-Threading模块&quot;&gt;&lt;a href=&quot;#python-Threading模块&quot; class=&quot;headerlink&quot; title=&quot;python-Threading模块&quot;&gt;&lt;/a&gt;python-Threading模块&lt;/h1&gt;&lt;hr&gt;&lt;h2 id=&quot;模块简介&quot;&gt;&lt;a href=&quot;#模块简介&quot; class=&quot;headerlink&quot; title=&quot;模块简介&quot;&gt;&lt;/a&gt;模块简介&lt;/h2&gt;&lt;p&gt;Python 提供了多个模块来支持多线程编程，包括 thread、 threading 和 Queue 模块等。&lt;br&gt;程序是可以使用 thread 和 threading 模块来创建与管理线程。 thread 模块提供了基本的线程和锁定支持；而 threading 模块提供了更高级别、功能更全面的线程管理。&lt;br&gt;使用 Queue 模块，用户可以创建一个队列数据结构，用于在多线程之间进行共享。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>JSONP-安全攻防技术</title>
    <link href="http://yoursite.com/2019/10/16/JSONP-%E5%AE%89%E5%85%A8%E6%94%BB%E9%98%B2%E6%8A%80%E6%9C%AF/"/>
    <id>http://yoursite.com/2019/10/16/JSONP-安全攻防技术/</id>
    <published>2019-10-16T06:55:01.000Z</published>
    <updated>2019-10-16T08:17:53.750Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JSONP-安全攻防技术&quot;&gt;&lt;a href=&quot;#JSONP-安全攻防技术&quot; class=&quot;headerlink&quot; title=&quot;JSONP-安全攻防技术&quot;&gt;&lt;/a&gt;JSONP-安全攻防技术&lt;/h1&gt;&lt;hr&gt;&lt;ul&gt;
&lt;li&gt;前言：本文是对&lt;a href=&quot;https://blog.knownsec.com/2015/03/jsonp_security_technic/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;道哥：JSONP 安全攻防技术&lt;/a&gt;的学习。&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;0x00-JSONP产生原因&quot;&gt;&lt;a href=&quot;#0x00-JSONP产生原因&quot; class=&quot;headerlink&quot; title=&quot;0x00 JSONP产生原因&quot;&gt;&lt;/a&gt;0x00 JSONP产生原因&lt;/h2&gt;&lt;p&gt;1、AJAX不允许跨域请求文件。&lt;br&gt;2、Web调用Javascript文件时不受跨域影响（拥有“src”属性的标签都可跨域）&lt;br&gt;3、如果想通过纯Web端跨域访问数据，就需要把远程服务器的数据装进Javascript格式的文件里。&lt;br&gt;4、JSON的纯字符数据格式可以简洁描述复杂数据，还被Javascript原生支持，所以客户端可以随意处理这些数据。&lt;br&gt;5、解决方案：Web客户端调用跨域服务器上动态生成的Javascript格式文件（一般以JSON为后缀）。客户端对JSON数据进行处理和展现。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="渗透测试" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="JSONP" scheme="http://yoursite.com/tags/JSONP/"/>
    
      <category term="Web安全" scheme="http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="[object Object]" scheme="http://yoursite.com/tags/object-Object/"/>
    
  </entry>
  
  <entry>
    <title>Pwn-函数调用栈</title>
    <link href="http://yoursite.com/2019/10/15/Pwn-%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%A0%88/"/>
    <id>http://yoursite.com/2019/10/15/Pwn-函数调用栈/</id>
    <published>2019-10-15T07:49:16.000Z</published>
    <updated>2019-10-15T08:38:16.980Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;Pwn-函数调用栈学习&quot;&gt;&lt;a href=&quot;#Pwn-函数调用栈学习&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
    
      <category term="渗透测试" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="[object Object]" scheme="http://yoursite.com/tags/object-Object/"/>
    
      <category term="Pwn" scheme="http://yoursite.com/tags/Pwn/"/>
    
  </entry>
  
  <entry>
    <title>Python-urllib.parse模块</title>
    <link href="http://yoursite.com/2019/10/14/Python-urllib.parse%E6%A8%A1%E5%9D%97/"/>
    <id>http://yoursite.com/2019/10/14/Python-urllib.parse模块/</id>
    <published>2019-10-13T16:00:00.000Z</published>
    <updated>2019-10-14T12:51:46.269Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python-urllib-parse模块&quot;&gt;&lt;a href=&quot;#Python-urllib-parse模块&quot; class=&quot;headerlink&quot; title=&quot;Python-urllib.parse模块&quot;&gt;&lt;/a&gt;Python-urllib.parse模块&lt;/h1&gt;&lt;hr&gt;&lt;h2 id=&quot;模块简介&quot;&gt;&lt;a href=&quot;#模块简介&quot; class=&quot;headerlink&quot; title=&quot;模块简介&quot;&gt;&lt;/a&gt;模块简介&lt;/h2&gt;&lt;p&gt;url.parse :定义了url的标准接口，实现url的各种抽取&lt;br&gt;parse模块的使用：url的解析，合并，编码，解码&lt;/p&gt;&lt;h3 id=&quot;1、urlparse&quot;&gt;&lt;a href=&quot;#1、urlparse&quot; class=&quot;headerlink&quot; title=&quot;1、urlparse()&quot;&gt;&lt;/a&gt;1、urlparse()&lt;/h3&gt;&lt;figure class=&quot;highlight subunit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;from urllib.parse import urlparse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;test &lt;/span&gt;= urlparse(&quot;https://www.baidu.com/test.php?id=1&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print (test)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>XSS-编码解码</title>
    <link href="http://yoursite.com/2019/10/14/XSS-%E7%BC%96%E7%A0%81%E8%A7%A3%E7%A0%81/"/>
    <id>http://yoursite.com/2019/10/14/XSS-编码解码/</id>
    <published>2019-10-13T16:00:00.000Z</published>
    <updated>2019-10-14T12:51:25.359Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;跨站脚本攻击（XSS）-编码剖析&quot;&gt;&lt;a href=&quot;#跨站脚本攻击（XSS）-编码剖析&quot; class=&quot;headerlink&quot; title=&quot;跨站脚本攻击（XSS）-编码剖析&quot;&gt;&lt;/a&gt;跨站脚本攻击（XSS）-编码剖析&lt;/h1&gt;&lt;hr&gt;&lt;ul&gt;
&lt;li&gt;前言： 笔者从事安全两年间，看了许多xss文章，踩过很多坑，想按照自己的想法整理一下前辈们的总结，随有了这篇文章，学会XSS，理解浏览器的编码原理是重要的部分之一。&lt;/li&gt;
&lt;/ul&gt;&lt;h2 id=&quot;1、浏览器的解码&quot;&gt;&lt;a href=&quot;#1、浏览器的解码&quot; class=&quot;headerlink&quot; title=&quot;1、浏览器的解码&quot;&gt;&lt;/a&gt;1、浏览器的解码&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2019/10/14/XSS-编码解码/1.jpg&quot; alt&gt;&lt;/p&gt;&lt;p&gt;上图显示了浏览器从接收代码，到渲染完成的过程：&lt;br&gt;1、HTML/SVG/XHTML 解析，Webkit有三个C++的类对应这三类文档。解析这三种文件会产生一个DOM Tree。&lt;br&gt;2、CSS 解析，解析CSS会产生CSS规则树。&lt;br&gt;3、Javascript DOM，主要是通过DOM API和CSSOM API来操作DOM Tree和CSS Rule Tree.&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="Web安全" scheme="http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="XSS" scheme="http://yoursite.com/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>Python-正则表达式</title>
    <link href="http://yoursite.com/2019/10/12/Python-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://yoursite.com/2019/10/12/Python-正则表达式/</id>
    <published>2019-10-11T16:00:00.000Z</published>
    <updated>2019-10-12T10:25:52.006Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python-正则表达式&quot;&gt;&lt;a href=&quot;#Python-正则表达式&quot; class=&quot;headerlink&quot; title=&quot;Python-正则表达式&quot;&gt;&lt;/a&gt;Python-正则表达式&lt;/h1&gt;&lt;hr&gt;&lt;h2 id=&quot;1-正则表达式&quot;&gt;&lt;a href=&quot;#1-正则表达式&quot; class=&quot;headerlink&quot; title=&quot;1.正则表达式&quot;&gt;&lt;/a&gt;1.正则表达式&lt;/h2&gt;&lt;p&gt;正则表达式用来匹配特定的字符串，python中提供RE模块进行正则表达式匹配。&lt;/p&gt;&lt;h3 id=&quot;1-1-正则表达式语法&quot;&gt;&lt;a href=&quot;#1-1-正则表达式语法&quot; class=&quot;headerlink&quot; title=&quot;1.1 正则表达式语法&quot;&gt;&lt;/a&gt;1.1 正则表达式语法&lt;/h3&gt;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;\w&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;# 匹配任意字母、数字、下划线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;\W&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;# 匹配任意非字母、数字、下划线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;\d&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;# 匹配数字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;\D&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;# 匹配所有的非数字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;\s&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;# 匹配空白符号(空格、Tab等)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;\S&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;# 匹配所有非文本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.     &lt;span class=&quot;comment&quot;&gt;# 匹配任意字符1次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*     &lt;span class=&quot;comment&quot;&gt;# 匹配前面的表达式0/n次 \d*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+     &lt;span class=&quot;comment&quot;&gt;# 匹配前面的表达式1/n次 \d+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?     &lt;span class=&quot;comment&quot;&gt;# 匹配前面的表达式0/1次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;m&amp;#125;   &lt;span class=&quot;comment&quot;&gt;# 匹配前面的表达式m次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;m,&amp;#125;  &lt;span class=&quot;comment&quot;&gt;# 匹配前面的表达式N到无穷&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;,n&amp;#125;  &lt;span class=&quot;comment&quot;&gt;# 匹配前面的表达式0到M次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;m,n&amp;#125; &lt;span class=&quot;comment&quot;&gt;# 匹配前面的表达式m到n次 \d&amp;#123;m,n&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*?    &lt;span class=&quot;comment&quot;&gt;# 匹配前面的表达式0次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+?    &lt;span class=&quot;comment&quot;&gt;# 匹配前面的表达式1次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[]    &lt;span class=&quot;comment&quot;&gt;# 字符集 [a-zA-Z0-9\_]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;()    &lt;span class=&quot;comment&quot;&gt;# 分组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|     &lt;span class=&quot;comment&quot;&gt;# 或运算 (p|P)ython&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^     &lt;span class=&quot;comment&quot;&gt;# 开始符 ^\d&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$     &lt;span class=&quot;comment&quot;&gt;# 结尾符 \d$&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="正则表达式" scheme="http://yoursite.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
</feed>
